buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("com.gradleup.shadow:com.gradleup.shadow.gradle.plugin:9.2.2")
    }
}

plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'com.gradleup.shadow' version "9.2.2"
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
        content {
            includeGroup("me.djtheredstoner")
        }
    }
    maven {
        url 'https://api.modrinth.com/maven'
        content {
            includeGroup("maven.modrinth")
        }
    }
    mavenLocal()
}

loom {
    accessWidenerPath = file("src/main/resources/flashback.accesswidener")
}

dependencies {
    // Minecraft and fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Login in dev environment
    modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.1.2")

    // MixinConstraints
    include(implementation("com.moulberry:mixinconstraints:1.0.8"))

    // Lattice (config)
    include(modImplementation("com.moulberry:lattice:1.2.18")) {
        attributes {
            attribute(Attribute.of("earth.terrarium.cloche.modLoader", String), "fabric")
        }
    }

    // Commons math
    shadow(implementation("org.apache.commons:commons-math3:3.6.1"))

    // Mod compatibility
    modCompileOnly("maven.modrinth:distanthorizons:Mt9bDAs6")
    modCompileOnly("maven.modrinth:sodium:RncWhTxD")
    modCompileOnly("maven.modrinth:iris:2fEZLvCV")
    modCompileOnly("maven.modrinth:bobby:2cuVyTav")
    modCompileOnly("maven.modrinth:simple-voice-chat:pTfXZIdn")
    modCompileOnly("maven.modrinth:replaymod:NtlpUQgI")
    modCompileOnly("maven.modrinth:modmenu:xhN1IvHi")
    modCompileOnly("maven.modrinth:starlight:1.1.3+1.20.2")

    // FFmpeg
    shadow(implementation("org.bytedeco:javacv-platform:1.5.10") {
        exclude group: "org.bytedeco", module: "artoolkitplus"
        exclude group: "org.bytedeco", module: "artoolkitplus-platform"
        exclude group: "org.bytedeco", module: "flycapture"
        exclude group: "org.bytedeco", module: "flycapture-platform"
        exclude group: "org.bytedeco", module: "leptonica"
        exclude group: "org.bytedeco", module: "leptonica-platform"
        exclude group: "org.bytedeco", module: "libdc1394"
        exclude group: "org.bytedeco", module: "libdc1394-platform"
        exclude group: "org.bytedeco", module: "libfreenect"
        exclude group: "org.bytedeco", module: "libfreenect-platform"
        exclude group: "org.bytedeco", module: "libfreenect2"
        exclude group: "org.bytedeco", module: "libfreenect2-platform"
        exclude group: "org.bytedeco", module: "librealsense2"
        exclude group: "org.bytedeco", module: "librealsense2-platform"
        exclude group: "org.bytedeco", module: "librealsense"
        exclude group: "org.bytedeco", module: "librealsense-platform"
        exclude group: "org.bytedeco", module: "openblas"
        exclude group: "org.bytedeco", module: "openblas-platform"
        exclude group: "org.bytedeco", module: "opencv"
        exclude group: "org.bytedeco", module: "opencv-platform"
        exclude group: "org.bytedeco", module: "tesseract"
        exclude group: "org.bytedeco", module: "tesseract-platform"
        exclude group: "org.bytedeco", module: "videoinput"
        exclude group: "org.bytedeco", module: "videoinput-platform"
    })

    // ImGui
    shadow(implementation(rootProject.files('deps/imgui-binding-1.90.0.jar')))
    shadow(api(rootProject.files('deps/imgui-natives.jar')))

    // Native File Dialogs
    String nfdVersion = "org.lwjgl:lwjgl-nfd:3.3.3";

    shadow(implementation(nfdVersion) {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
    shadow(api("org.lwjgl:lwjgl-nfd::natives-macos") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
    shadow(api("org.lwjgl:lwjgl-nfd::natives-linux") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
    shadow(api("org.lwjgl:lwjgl-nfd::natives-windows") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
    shadow(api("org.lwjgl:lwjgl-nfd::natives-macos-arm64") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
    shadow(api("org.lwjgl:lwjgl-nfd::natives-linux-arm64") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
    shadow(api("org.lwjgl:lwjgl-nfd::natives-windows-arm64") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    })
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}


shadowJar {
    configurations = [project.configurations.shadow]
    archiveBaseName = "flashback"
    destinationDirectory = file("${buildDir}/tmp/allJar")

    exclude("LICENSE")
    exclude("LICENSE.txt")
}

remapJar {
    dependsOn(shadowJar)
    input = shadowJar.getArchiveFile()
}


// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
